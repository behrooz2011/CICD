name: Continuous Integration

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # MongoDB service container
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval "db.adminCommand('ping')"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm test

      - name: Run e2e tests
        run: npm run test:e2e
        env:
          MONGODB_URI: mongodb://localhost:27017/task-management-test
          JWT_SECRET: test_jwt_secret
          JWT_EXPIRATION: 1h
          JWT_REFRESH_SECRET: test_jwt_refresh_secret
          JWT_REFRESH_EXPIRATION: 7d
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: task-management-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
